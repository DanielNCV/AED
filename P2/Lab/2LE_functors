#include <iostream>
template <class T>
class Asc {
public:
    bool operator() (int a, int b) {
        return a > b;
    }
};

template <class T>
class Des {
public:
    bool operator() (int a, int b) {
        return a < b;
    }
};

template<class T>
struct nodo {
    T valor;
    nodo<T>* next;
    nodo(T v, nodo<T>* n = NULL) {
        valor = v;
        next = n;
    }
};

template<class T, class O>
struct LE{
    nodo<T>* head= NULL;
    void ADD(T v) {
        nodo<T>** p;
        if (!find(v, p)) {
            nodo<T>* tmp = new nodo<T>(v, *p);
            *p = tmp;
        }
    }
    void DEL(T v) {
        nodo<T>** p;
        if (find(v, p)) {
            nodo<T>* tmp =  *p;
            *p = (*p)->next;
            delete tmp;
        }
    }
    bool find(T v, nodo<T>**& pos) {
        pos = &head;
        for (; *pos && (*pos)->valor < v; pos = &(*pos)->next);
        if (*pos && (*pos)->valor == v)
            return true;
        else
            return false;
    }
    void print() {
        std::cout << "head->";
        for (nodo<T>* p = head; p; p = p->next)
            std::cout << p->valor << "->";
        std::cout << "null\n";
    }
};

int main()
{
    LE<int, Asc<int>> listita;
    listita.ADD(1);
    listita.ADD(25);
    listita.ADD(0);
    listita.ADD(7);
    listita.ADD(3);
    listita.print();
    listita.DEL(7);
    listita.print();

}
