#include <iostream>
template<class T>
struct nodo {
    T v;
    nodo<T>* next;
    nodo(T x, nodo<T>* n = NULL) {
        v = x;
        next = n;
    }
};
template<class T>
struct cola {
    nodo<T>* head = NULL;
    nodo<T>* tail = NULL;

    void push(T x) {
        if (tail) {
            tail->next = new nodo<T>(x);
            tail = tail->next;
        }
        else
            tail = new nodo<T>(x);
        if (!head)
            head = tail;
    }
    void print() {
        nodo<T>** p = &head;
        for (; *p; p = &(*p)->next)
            std::cout << (*p)->v << "->";
        std::cout << "\n";
    }
    bool pop(T& valor) {
        if (head) {
            nodo<T>* tmp = head;
            valor = head->v;
            head = head->next;
            delete tmp;
            return 1;
        }
        return 0;
    }
};
template<class T>
struct pila {
    nodo<T>* top = NULL;
    void push(T x) {
        nodo<T>* p = new nodo<T>(x, top);
        top = p;
    }
    void print() {
        nodo<T>** p = &top;
        for (; *p; p = &(*p)->next)
            std::cout << (*p)->v << "->";
        std::cout << "\n";

    }
    void pop(T& valor) {
        if (top) {
            nodo<T>* tmp = top;
            valor = top->v;
            top = top->next;
            delete tmp;
        }
    }
};
int main()
{
    std::cout << "Hello World!\n";
    
    pila<int> p;
    for (int i = 0; i < 6; i++) {
        p.push(i);
        p.print();
    }
    int i;
    for (int j = 0; j < 6; j++) {
        p.pop(i);
        p.print();
    }
    
    
    cola<int> c;
    for (int i = 0; i < 6; i++) {
        c.push(i);
        c.print();
    }
    int x;
    for (int j = 0; j < 6; j++) {
        c.pop(x);
        c.print();
    }
    
}
