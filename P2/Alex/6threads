#include <iostream>
#include <thread>
#include <mutex>
#include <cmath>
#include <vector>
using namespace std;
void function(int a, int c) {
    return;
}
void bubble(int* a, int* b) {
    
    while (a <= b) {
        int* p = a;
        while (p <= b) {
            if (*a> *p) {
                int tmp = *a;
                *a = *p;
                *p = tmp;
            }
            p++;
        }       
        a++;
    }
}
int main()
{
    int arr[24];
    for (int i = 0; i < 24; i++) {
        arr[i] = rand() % 24;
    }
    for (int i = 0; i < 24; i++) {
        std::cout << arr[i] << ' ';
    }
    std::cout << '\n';


    std::mutex m;
    int n = std::thread::hardware_concurrency();

    
    while (n>=1)
    {
        vector<thread> vecthr;
        int xx = 24 / n;
        for (int i = 0;i < n;i++)
            vecthr.push_back(thread(bubble, &arr[i * xx], &arr[i * xx + xx - 1]));
        for (int i = 0;i < n;i++)
            vecthr[i].join();
        for (int i = 0; i < 24; i++) {
            std::cout << arr[i] << ' ';
        }
        std::cout<< "\n";
        n = n / 2;
    }
}
