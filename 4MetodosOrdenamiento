#include <iostream>
#include <time.h> 
#include <stdlib.h> 
#include <stdio.h>

class Op{
public:
    virtual bool cmp(int a, int b) { return 0; }
};
class op1 : public Op{
public:
    virtual bool cmp(int a, int b) {
        return a < b;
    }
};
class op2 :public Op {
public:
    virtual bool cmp(int a, int b) {
        return a > b;
    }
};
struct Asc_w {
    bool cmp(int a, int b) {
        return a < b;
    }
};

struct Asc_i {
    inline bool cmp(int a, int b) {
        return a < b;
    }
};

void compar(int* ini, int* fin){
    int aux;
    while (ini < fin) {
        for (int* c = ini;c <= fin;c++) {
            if (*c < *ini) {
                aux = *ini;
                *ini = *c;
                *c = aux;
            }
        }
        ini++;
    }
}

int main()
{
    float a;
    clock_t time_req;
    time_req = clock();
    int ar[11] = {}; 
    for (int i = 0; i < 10;i++) {
        ar[i]=rand() % 10 + 1;
    }

    int aux;
    int* ini = &ar[0];
    int* fin = &ar[10];
    Asc_i o;
    op2 q;
    Op* p = &q;
    while (ini < fin) {
        for (int* c = ini;c <= fin;c++) {
            if (p->cmp(*c, *ini)) {
                aux = *ini;
                *ini = *c;
                *c = aux;
            }
        }
        ini++;
    }
    for (int i = 0; i < 10;i++) {
        std::cout<<ar[i];
    }
    time_req = clock() - time_req;
    printf("Processor time taken in pow function: %f "
        "seconds\n",
        (float)time_req / CLOCKS_PER_SEC);

    //compar(&ar[0], &ar[10000]);

    
}

